
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Лушин Артём - студент РУДН, начавший обучение на направлении “Математика и механика” (НММ), но по окончании первой сессии перевелся на направление “Компьютерные науки” (НКА). Владеет языком программирования: java, python, c++, nasm. Имеет два разряда КМС в спорте.\n","date":1683638743,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1683638743,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Лушин Артём - студент РУДН, начавший обучение на направлении “Математика и механика” (НММ), но по окончании первой сессии перевелся на направление “Компьютерные науки” (НКА). Владеет языком программирования: java, python, c++, nasm.","tags":null,"title":"Лушин Артём","type":"authors"},{"authors":["Лушин Артём"],"categories":[],"content":"","date":1683638743,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683638743,"objectID":"9b1d4e9aa418c84130be17dcd3377213","permalink":"https://example.com/publication/%D1%81++/","publishdate":"2023-05-09T16:25:43+03:00","relpermalink":"/publication/%D1%81++/","section":"publication","summary":"Изучение языка программирования в двух словах","tags":["Программирование"],"title":"С++","type":"publication"},{"authors":["Лушин Артём"],"categories":[],"content":"","date":1683636645,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683636645,"objectID":"10e0b4d4f05e8a7de54fefbccfcdae71","permalink":"https://example.com/publication/energy/","publishdate":"2023-05-09T15:50:45+03:00","relpermalink":"/publication/energy/","section":"publication","summary":"Что вы выберите: кофе или энергетик?","tags":["Здоровье","Отдых"],"title":"Бодрящие напитки","type":"publication"},{"authors":["Лушин Артём"],"categories":[],"content":"Нажмите на кнопку “cite”, чтобы увидеть код программы.\n","date":1683624172,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683624172,"objectID":"2e0ff1368ee9d7899041a0a1f3ad56a2","permalink":"https://example.com/publication/coding/","publishdate":"2023-05-09T12:22:52+03:00","relpermalink":"/publication/coding/","section":"publication","summary":"Статья в которой описывается процесс декодирования двоичного кода в текст","tags":["Программирование"],"title":"Декодируем код в текст","type":"publication"},{"authors":[],"categories":[],"content":"Расскажу немного про репетиторство. Самое тяжелое - это найти подход к ученикам. Я занимался репетиторством для 9 классов, так как ОГЭ решается за пол часа и его легко можно объяснить, в отличии от ЕГЭ, которое даже для меня довольно трудное. Изначально я набирал себе учеников на различных сайтах (юла и авито), но после того, как появились первые ученики, в ход уже пошло “Сарафанное радио”. Мои ученики начали рассказывать про меня своим знакомым и друзьям, которые в последующем тоже захотели ко мне. Так я и набрал себе учеников для репетиторства. Из-за того, что я начинаю подготавливать учеников с начала года, у нас довольно много времени, чтобы разобрать каждый номер до мелочей. Но когда остается пару недель до экзамена, я даю просто пробники, смотрю как человек волнуется и тд. Мне нравится мой подход, потому что я не давлю на ученика. я разрешаю разговаривать на ты, разрешаю материться, потому что я хочу, чтобы ученику было комфортно, ведь тогда он будет лучше усваивать информацию. Но некоторые родители сомневаются в моей компетентности, так как считают меня слишком молодым. Но в ответ они смотрят как я провожу занятие и их мнение меняется. К тому же, я относительно недавно сдавал ЕГЭ, поэтому у меня есть свежий опыт сдачи экзамена)\n","date":1683581865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683581865,"objectID":"5264eb78e3e98f571558d9083ecc9cd6","permalink":"https://example.com/project/teach/","publishdate":"2023-05-09T00:37:45+03:00","relpermalink":"/project/teach/","section":"project","summary":"Частный репетитор","tags":["Работа"],"title":"Репетиторство","type":"project"},{"authors":[],"categories":[],"content":"Мы можем создать свой сайт с личным хостом. Для этого необязательно обладать навыками программирования, достаточно знать основы линукса. Мы можем взять шаблон с прикрепленного гитхаба и создать свой репозиторий по этому шаблону. После создания, переносим репозиторий на свой пк и проверяем работу сайта на локальной машине. Если сайт запустился, то мы правильно перенесли все данные. Далее мы создаем второй репозиторий и объединяем с предыдущим. Если мы сделали все правильно, мы сможем зайти в интернете на сайт (ссылка на сайт = имя второго созданного репозитория). Если мы все сделали правильно, мы увидим в интернете наш работающий сайт. Далее достаточно просто заполнять его и переделывать под себя. Когда мы изучим все папки, которые находятся в скопированном репозитории, мы сможем понимать как изменять сайт. Как будет выглядеть сайт зависит только от нашей фантазии. Какие будут пункты, как они будут выглядеть и тд, все это зависит только от фантазии. После внесенных изменений, мы переносим на систему гитхаб все изменения, чтобы поменялся сам сайт. Я считаю, что это очень крутой проект, потому что мы получаем личный хост и сайт за бесплатно. Ну, а если у кого-либо остаются вопросы, всегда можно посмотреть видео по созданию сайта на моем ютуб канале. GLHF (good luck, have fun).\n","date":1683581865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683581865,"objectID":"03574b0a6ced00151487df664e72ffec","permalink":"https://example.com/project/site/","publishdate":"2023-05-09T00:37:45+03:00","relpermalink":"/project/site/","section":"project","summary":"Создание личного сайта","tags":["Программирование","работа"],"title":"Сайт","type":"project"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"Язык научного программирования - Scientific programming language В компьютерном программировании , научный язык программирования может относиться к двум степеням той же концепции.\nВ широком смысле научный язык программирования - это язык программирования, который широко используется в вычислительной науке и вычислительной математике .\nВ этом смысле C / C ++ и Python можно рассматривать как языки научного программирования. В более строгом смысле научный язык программирования - это язык, который разработан и оптимизирован для использования математических формул и матриц . Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка. Например, ни C ++, ни Python не имеют встроенных типов матриц или функций для матричной арифметики (сложение, умножение и т. Д.); вместо этого эта функция доступна через стандартные библиотеки. Научные языки программирования в сильном смысле включают ALGOL , APL , Fortran , J , Юлю , Maple , MATLAB и R .\nЯзыки научного программирования не следует путать с научным языком в целом, который свободно относится к более высоким стандартам точности, правильности и краткости, ожидаемым от практикующих научный метод .\nПримеры Линейная алгебра Языки научного программирования предоставляют возможности для работы с линейной алгеброй . Например, следующая программа Julia решает систему линейных уравнений :\nA = rand(20, 20) # A is a 20x20 matrix\nb = rand(20) # b is a 20-element vector\nx = A\\b # x is the solution to A*x = b\nРабота с большими векторами и матрицами - ключевая особенность этих языков, поскольку линейная алгебра закладывает основу математической оптимизации , которая, в свою очередь, позволяет использовать основные приложения, такие как глубокое обучение .\nМатематическая оптимизация В научном языке программирования мы можем вычислять оптимум функции с синтаксисом, близким к математическому языку. Например, следующий код Джулии находит минимум полинома .\nusing Optim\nP(x,y) = x^2 - 3x*y + 5y^2 - 7y + 3\nz₀ = [ 0.0\n0.0 ] # starting point for optimization algorithm o\nptimize(z -\u0026gt; P(z…), z₀, Newton();\nautodiff = :forward)\nВ этом примере используется метод минимизации Ньютона . Современные языки научного программирования будут использовать автоматическое дифференцирование для вычисления градиентов и гессианов функции, заданной в качестве входных данных; ср. дифференцируемое программирование . Здесь для этой задачи выбрана автоматическая прямая дифференциация. Старые языки научного программирования, такие как почтенный Фортран, потребовали бы от программиста передать рядом с функцией, которая должна быть оптимизирована, функцию, которая вычисляет градиент, и функцию, которая вычисляет гессиан.\nЧем больше знаний о функции, которую необходимо минимизировать, тем больше можно использовать более эффективные алгоритмы. Например, выпуклая оптимизация обеспечивает более быстрые вычисления, когда функция является выпуклой, квадратичное программирование обеспечивает более быстрые вычисления, когда функция не более чем квадратична по своим переменным, и линейное программирование, когда функция максимально линейна.\n","date":1682442653,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682442653,"objectID":"b54f9abb3852cc619d0ee5270cd73957","permalink":"https://example.com/post/math/","publishdate":"2023-04-25T20:10:53+03:00","relpermalink":"/post/math/","section":"post","summary":"Один и тот же язык - два подхода","tags":["Учеба","Программирование"],"title":"Научные языки программирования","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"ОСНОВНЫЕ ПРАВИЛА ОФОРМЛЕНИЯ БИБЛИОГРАФИЧЕСКОГО СПИСКА ЛИТЕРАТУРЫ • Общие положения • Группировка материала в списке литературы • Библиографическое описание документов • Образцы библиографических описаний • Оформление ссылок в тексте работы\nПрикнижный (пристатейный) библиографический список (список использованных источников и литературы) - библиографическое пособие, содержащее библиографические описания использованных (цитируемых, рассматриваемых, упоминаемых) и (или) рекомендуемых документов.\nСписок литературы является обязательной составной частью курсовой, дипломной или другой научной работы и показывает умение слушателя применять на практике знания, полученные при изучении соответствующих учебных дисциплин, отражает самостоятельную творческую работу, проделанную автором по сбору и анализу материала, документально подтверждает и обосновывает достоверность и точность приводимых в тексте работы фактов, статистических данных, цитат и других сведений, заимствованных из различных источников. Грамотно составленный список и приведенные библиографические ссылки и сноски в определенной мере есть также выражение научной этики и культуры научного труда. Поэтому вопросам составления и оформления библиографического списка и приведения библиографических ссылок в научной работе следует уделять самое серьезное внимание. Составление списка – длительный процесс, начинающийся одновременно с выбором темы работы. Необходимо вести библиографическую картотеку, выписывая из каталогов, картотек, библиографических пособий, списков выходные данные всех изданий, которые могут иметь отношение к теме исследования. При ознакомлении с каждым источником библиографические данные проверяются и уточняются. Цитаты, фактические, статистические и иные сведения выписываются с точным указанием страницы, на которой они были опубликованы. Группировка материала в списке литературы • Рекомендуется представлять единый список к работе в целом. Каждый источник упоминается в списке только один раз, вне зависимости от того, как часто на него делается ссылка в тексте.\n• Список обязательно должен быть пронумерован.\n• В зависимости от того, какой принцип положен в основу группировки произведений, различают следующие виды списков литературы:\nалфавитный, в котором записи располагают по алфавиту фамилий авторов и/или заглавий произведений, если фамилия автора не указана. Записи рекомендуется располагать следующим образом: при совпадении первых слов заглавий – по алфавиту вторых и т.д.\nпри наличии работ одного автора – в алфавите заглавий;\nпри наличии авторов-однофамильцев – по инициалам;\nпри нескольких работах авторов, написанных ими в соавторстве с другими – по алфавиту соавторов.\nАбалкин Л. И.\nАбелин А. П.\nАлексеев Д. И.\nАлексеев М. П.\nАлексеева Т. А.\nАлексеева-Бескина Т. И.\nсистематический, в котором все книги, статьи и другие материалы подбираются по отраслям знаний, отдельным вопросам, темам в логическом соподчинении отдельных рубрик, в начале списка указывается литература общего характера, охватывающая широкий круг вопросов, а затем следует материал по отдельным темам;\nхронологический, в порядке хронологии (прямой или обратной) опубликования документов. Используется для работ по истории науки, истории изучения какого-либо вопроса, в работах посвященных деятельности определенного лица;\nпо видам изданий, в котором выделяют следующие группы изданий: официальные государственные, нормативно – инструктивные, справочные и т.д.\nНаиболее удобным является алфавитный способ расположения материала без разделения по видовому признаку (например: книги, статьи), так как в этом случае произведения собираются в авторских комплексах. Произведения одного автора располагаются в списке по алфавиту заглавий или по годам публикации, в прямом хронологическом порядке (такой порядок группировки позволяет проследить за динамикой взглядов определенного автора на проблему)\nАтаманчук Г. В. Сущность государственной службы\nАтаманчук Г. В. Теория государственного управления\nАтаманчук Г. В. Управление – социальная ценность и эффективность\n• Официальные документы занимают в списке литературы особое место. Они всегда ставятся в начале списка в определенном порядке:\nКонституции;\nКодексы;\nЗаконы;\nУказы Президента;\nПостановление Правительства;\nДругие нормативные акты (письма, приказы и т. д.).\nВнутри каждой группы документы располагаются в хронологическом порядке.\n• При наличии в списке источников на других языках, кроме русского, образуется дополнительный алфавитный ряд, т. е. литература на иностранных языках ставится в конце списка после литературы на русском языке. При этом библиографические записи на иностранных европейских языках объединяются в один ряд.\nБиблиографическое описание документов Каждый документ, включенный в список, должен быть описан в соответствии с требованиями: • ГОСТ 7. 1-2003 «Библиографическая запись. Библиографическое описание документа. Общие требования и правила составления»,\n• ГОСТ Р 7.0.12-2011 «Библиографическая запись. Сокращение слов и словосочетаний на …","date":1682442653,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682442653,"objectID":"ab0260fde831a7b7038e4c0c50704bd5","permalink":"https://example.com/post/bibliography/","publishdate":"2023-04-25T20:10:53+03:00","relpermalink":"/post/bibliography/","section":"post","summary":"Библиография — это список литературы по исследуемому вопросу","tags":["Учеба"],"title":"Работа с библиографией","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"История Разработка ядра Linux велась на проприетарной системе BitKeeper, которую автор — Ларри Маквой, сам разработчик Linux — предоставил проекту по бесплатной лицензии. Разработчики, высококлассные программисты, написали несколько утилит, и для одной Эндрю Триджелл произвёл реверс-инжиниринг формата передачи данных BitKeeper. В ответ Маквой обвинил разработчиков в нарушении соглашения и отозвал лицензию, и Торвальдс взялся за новую систему: ни одна из открытых систем не позволяла тысячам программистов кооперировать свои усилия (тот же конфликт привёл к написанию Mercurial). Идеология была проста: взять подход CVS и перевернуть с ног на голову, и заодно добавить надёжности.\nНачальная разработка велась меньше, чем неделю: 3 апреля 2005 года разработка началась, и уже 7 апреля код Git управлялся неготовой системой. 16 июня Linux был переведён на Git, а 25 июля Торвальдс отказался от обязанностей ведущего разработчика.\nВозможности Система спроектирована как набор программ, специально разработанных с учётом их использования в сценариях. Это позволяет удобно создавать специализированные системы контроля версий на базе Git или пользовательские интерфейсы. Например, Cogito является именно таким примером оболочки к репозиториям Git, а StGit использует Git для управления коллекцией исправлений (патчей).\nGit поддерживает быстрое разделение и слияние версий, включает инструменты для визуализации и навигации по нелинейной истории разработки. Как и Darcs, BitKeeper, Mercurial, Bazaar и Monotone, Git предоставляет каждому разработчику локальную копию всей истории разработки, изменения копируются из одного репозитория в другой.\nУдалённый доступ к репозиториям Git обеспечивается git-демоном, SSH- или HTTP-сервером. TCP-сервис git-daemon входит в дистрибутив Git и является наряду с SSH наиболее распространённым и надёжным методом доступа. Метод доступа по HTTP, несмотря на ряд ограничений, очень популярен в контролируемых сетях, потому что позволяет использовать существующие конфигурации сетевых фильтров.\nОсобенности реализации Ядро Git представляет собой набор утилит командной строки с параметрами. Все настройки хранятся в текстовых файлах конфигурации. Такая реализация делает Git легко портируемым на любую платформу и даёт возможность легко интегрировать Git в другие системы (в частности, создавать графические git-клиенты с любым желаемым интерфейсом).\nРепозиторий Git представляет собой каталог файловой системы, в котором находятся файлы конфигурации репозитория, файлы журналов, хранящие операции, выполняемые над репозиторием, индекс, описывающий расположение файлов, и хранилище, содержащее собственно файлы. Структура хранилища файлов не отражает реальную структуру хранящегося в репозитории файлового дерева, она ориентирована на повышение скорости выполнения операций с репозиторием. Когда ядро обрабатывает команду изменения (неважно, при локальных изменениях или при получении патча от другого узла), оно создаёт в хранилище новые файлы, соответствующие новым состояниям изменённых файлов. Существенно, что никакие операции не изменяют содержимого уже существующих в хранилище файлов.\nПо умолчанию репозиторий хранится в подкаталоге с названием «.git» в корневом каталоге рабочей копии дерева файлов, хранящегося в репозитории. Любое файловое дерево в системе можно превратить в репозиторий git, отдав команду создания репозитория из корневого каталога этого дерева (или указав корневой каталог в параметрах программы). Репозиторий может быть импортирован с другого узла, доступного по сети. При импорте нового репозитория автоматически создаётся рабочая копия, соответствующая последнему зафиксированному состоянию импортируемого репозитория (то есть не копируются изменения в рабочей копии исходного узла, для которых на том узле не была выполнена команда commit).\nАрхитектура Нижний уровень git является так называемой контентно-адресуемой файловой системой. Инструмент командной строки git содержит ряд команд по непосредственной манипуляции этим репозиторием на низком уровне. Эти команды не нужны при нормальной работе с git как с системой контроля версий, но нужны для реализации сложных операций (ремонт повреждённого репозитория и так далее), а также дают возможность создать на базе репозитория git своё приложение.\nДля каждого объекта в репозитории вычисляется SHA-1-хеш, и именно он становится именем файла, содержащего данный объект в каталоге .git/objects. Для оптимизации работы с файловыми системами, не использующими деревья для каталогов, первый байт хеша становится именем подкаталога, а остальные — именем файла в нём, что снижает количество файлов в одном каталоге (ограничивающий фактор производительности на таких устаревших файловых системах).\nВсе ссылки на объекты репозитория, включая ссылки на один объект, находящийся внутри другого объекта, являются SHA-1-хешами.\nКроме того, в репозитории существует каталог refs, который позволяет задать читаемые человеком имена для каких-то объектов Git. В командах Git оба вида ссылок — читаемые …","date":1678820886,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678820886,"objectID":"b51c39c0ac0ec5a38bb139cda30bb055","permalink":"https://example.com/post/git/","publishdate":"2023-03-14T22:08:06+03:00","relpermalink":"/post/git/","section":"post","summary":"Git — распределённая система управления версиями.","tags":["Учеба","Программирование"],"title":"Управление версиями. Git","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"История Первоначально создан в 2004 году Джоном Грубером[en] и Аароном Шварцем. Многие идеи языка были позаимствованы из существующих соглашений по разметке текста в электронных письмах. Реализации языка Markdown преобразуют текст в формате Markdown в валидный, правильно построенный XHTML и заменяют левые угловые скобки («\u0026lt;») и амперсанды («\u0026amp;») на соответствующие коды сущностей. Первой реализацией Markdown стала написанная Грубером реализация на Perl, однако спустя некоторое время появилось множество реализаций от сторонних разработчиков (см. ниже). Реализация на Perl распространяется по лицензии типа BSD. Реализации Markdown на различных языках программирования включены (или доступны в качестве плагина) во многие системы управления содержимым.\nПримеры синтаксиса Ниже приведены примеры использования Markdown, однако это далеко не полное руководство. Полное описание языка может быть найдено на официальном сайте[6]. Символы, которые обычно рассматриваются в Markdown как специальные, могут быть экранированы с помощью обратного слеша. Например, последовательность «*» выведет символ «*», а не будет являться признаком начала выделенного текста. Кроме того, Markdown не преобразует текст внутри «сырых» блоков XHTML. Таким образом, в Markdown-документ можно включать секции XHTML, заключив их предварительно в теги уровня блока.\nТекст с выделением или логическим ударением выделение (например, курсив) сильное выделение (например, полужирное начертание)\nПрограммный код Элементы кода могут быть внутри строки (inline) либо многострочными блоками.\nВнутри строки код выделяется символом “`” (обратный апостроф).\nПример кода внутри строки (inline) Hello world! Многострочный блок кода обозначается отступом из 4 пробелов или одного Tab.\nНиже начинается многострочный блок кода\n\u0026lt;!doctype html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;!-- Заголовок документа --\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;!-- Тело документа --\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Блок кода завершился\nЗачёркнутый текст необходимо сделать одну другую вещь\nСписки элемент маркированного списка ещё один элемент ненумерованного списка буллеты элементов могут быть разными Элемент нумерованного списка Элемент №2 того же списка Элемент №3 списка — элементы нумеруются по порядку, цифра в начале строки не имеет значения Заголовки Создание заголовков производится путём помещения знака решетки перед текстом заголовка. Количество знаков «#» соответствует уровню заголовка. HTML предоставляет 6 уровней заголовков.\n“# Заголовок первого уровня”\n… “### Заголовок третьего уровня”\n… “###### Заголовок шестого уровня” Первые два уровня заголовка также имеют альтернативный синтаксис:\nЗаголовок первого уровня Заголовок второго уровня Цитаты (тег blockquote) Данный текст будет заключен в HTML-теги Ссылки Текст ссылки альтернативный способ задавать ссылки если есть повторения\nГде-то среди текста встречается текст ссылки.\nТакже ссылка повторяется пример адреса.\nСсылка на второй также Bar ресурсы.\nИзображения Заголовок изображения Реализации Markdown C#[7][8]\nC[9][10][11][12]\nColdFusion[13]\nCommon Lisp[14]\nGo[15]\nHaskell[16]\nJava[17][18]\nJavaScript[19]\nKotlin[20][21]\nLua[22]\nnewLISP[23]\nPerl[24]\nPHP[25]\nPython[26][27]\nRuby[28][29]\nScala[30]\nTcl[31]\nРасширения Приведённые ниже приложения реализуют Markdown, расширяя его синтаксис дополнительной функциональностью:\nMultiMarkdown (C)[32]\nText::MultiMarkdown (Perl) модуль, реализующий расширение MultiMarkdown[33]\nPHP Markdown Extra[34]\npython-markdown2 (Поддерживает некоторые расширения PHP Markdown)[27]\npython-markdown (Имеет систему расширений для добавления нового синтаксиса)[26]\nMarkout (Java)[35]\nPegdown (Java)[18]\nMaruku (Ruby)[29]\nPandoc (Haskell)[16][36]\nРуководства Markdown: Dingus онлайн-конвертер[37]\nMarkdown cheat sheet[38]\nКонвертеры из HTML в Markdown html2text.py (написано на Python)[39]\nMarkdownify (на PHP)[40]\nMake.text — букмарклет, преобразующий любую веб-страницу в Markdown[41]\nXHTML-to-Markdown XSLT (XSLT-таблица стилей, работает только с XHTML)[42]\nPandoc — написанная на Haskell библиотека по преобразованию различных форматов, поддерживает несколько диалектов Markdown (markdown — диалект от pandoc, markdown_strict — оригинальный Markdown без расширений, markdown_phpextra — диалект от PHP, markdown_github — диалект от github) может преобразовывать из и в Markdown, HTML, reStructuredText, LaTeX, и другие.[16]\nДругие форматы в Markdown odt2txt (написанный на Python скрипт для преобразования файлов из формата OpenDocument в Markdown)[43]\nword_markdown_macro (макрос Microsoft Word, преобразующий некоторую часть форматирования Word в Markdown)[44]\nУтилиты Markdown tool (написанный на Python скрипт для загрузки документов Markdown вместе с изображениями)[45]\nWritage - плагин для Microsoft Word, позволяющий конвертировать DOCX документы в формат Markdown и наоборот.\nВеб-приложения, использующие Markdown\nВики: DokuWiki (с помощью плагина)\nikiwiki\nOddmuse\nPmWiki (с помощью плагина)\nБлоги: Tumblr — изначально отключён, но можно использовать, включив в настройках.\nscriptogr.am\nCMS: Drupal — …","date":1678820886,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678820886,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://example.com/post/markdown/","publishdate":"2023-03-14T22:08:06+03:00","relpermalink":"/post/markdown/","section":"post","summary":"Markdown— облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте","tags":["Учеба","Программирование"],"title":"Язык разметки Markdown.","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"Неделя в двух словах После того, как меня перевели на направление НКА, я понял, что мне нужен более мощный ноутбук. В пятницу я купил новый ноутбук, для более комфортной работы. Из интересного, он от фирмы MSI, процессор intel i7 12 поколения, 32гб оперативы. Первым делом я установил все программы для учебы. Самое тяжело было, установить sagemath, так как я не мог установить его на предыдущие два компьютера, я боялся, что и сейчас он не установится. Ну а после программ я установил valorant, cs go и v4. Кстати, я надеялся, что получу cs2, но увы, мне не дали бета тест.\nПомимо ноутбука я потратил много денег на автошколу. Я закончил обучение теоритической части и мне надо было переходить на практическую часть. Для этого, мне нужна была справка. Я съездил в Бронницы, чтобы мне выписали справку из нарко и псих диспансеров, затем отвез ее в Москву и оплатил все обучение.\nНу и в среду мы писали кр по матлогу. Она была довольно простой, даже учитывая, что я не готовился к ней. Так как мы написали ее первыми, вечером я объяснял решения ребятами с НММ(мое прошлое направление).\nЗакрыл все долги за первый семестр, которые образовались из-за перевода. И уже успел получить 55 баллов по техпроге, насколько я знаю, это один из высших баллов среди всей группы.\n","date":1678819266,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678819266,"objectID":"d4fc97908d0d24619c6e8dd53ebce529","permalink":"https://example.com/post/secondweek/","publishdate":"2023-03-14T21:41:06+03:00","relpermalink":"/post/secondweek/","section":"post","summary":"Веселая и сложная неделя","tags":["Отдых"],"title":"Вторая неделя","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"Неделя в двух словах В течении недели я сделал 4 лабораторных работы по операционным системам. Записал все скринкасты, выложил их на платформу Youtube и начал выполнение индивидуального проекта.\nПомимо учебы, я получил долгожданную новость. С начала февраля я пытался перевестись на другое направление, но мой перевод отклоняли, но я каждый раз подходил в надежде на одобрение приказа. И в понедельник мне пришло подтверждение приказа, что я теперь обучаюсь на направлении - компьютерная архитектура (НКА).\nВ пятницу мы писали контрольную по математическому анализу, скажу так, писать какую-либо контрольную без подгтовки, это опасная затея, но тем не менее, я написал ее и жду свои баллы.\nP.s. пост сделан от 14 марта 2023, но повторно опубликован 5 апреля 2023 года. (до сих пор жду результаты матана)\n","date":1678819266,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678819266,"objectID":"95d4837016870121838fc1d4a9d1b40e","permalink":"https://example.com/post/firstweek/","publishdate":"2023-03-14T21:41:06+03:00","relpermalink":"/post/firstweek/","section":"post","summary":"В этом посте я расскажу об одной из самых приятных недель за этот год.","tags":["Отдых"],"title":"Первая неделя","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"Неделя в двух словах Мне назначили занятия по вождению в автошколе. Я закончил теоретическую часть в автошколе, поэтому мне назначили инструктора и я приступил к занятию по вождению. По планам, я должен закончить обучение вождению к середине мая. В ночь со среды на четверг у меня был прилив сил, поэтому я решил подать заявки на трудоустройство. За ночь я подал более 15 заявок на разные работы. К моему удивлению, мне ответило большинство работ. В пятницу мне назначили 4 собеседования в разных компаниях: 2 кол-центра и 2 магазина. После прохождения собеседований, мне понравилось только две компании, поэтому я связался с одной из них и мне назначили ознакомительный рабочий день. После того как я ознакомился с работой, я поехал оформлять медкнижку и устраиваться на работу. Так как мне лень ходить на физкультуру, хотя я обожаю волейбол, я приобрел платную секцию - шахматы, чтобы можно было официально отдыхать. Это мое лучшее вложение денег за этот год. ","date":1678819266,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678819266,"objectID":"5a3f7efdc176ae16d1e4583b9d65e906","permalink":"https://example.com/post/thirdweek/","publishdate":"2023-03-14T21:41:06+03:00","relpermalink":"/post/thirdweek/","section":"post","summary":"Продуктивность","tags":["Отдых"],"title":"Третья неделя","type":"post"},{"authors":["Лушин Артём"],"categories":["Demo"],"content":"Неделя в двух словах Эта неделя оказалась с одной стороны интересной, но с другой стороны, я рад что она закончилась. Недавно я устроился на работу во ВкусВилл и практически всю неделю работал. Мне нравится мое занятие, потому что до этого у меня было очень много свободного времени и я хотел куда-то его тратить. Да и к тому же, я хочу очень много двигаюсь, благодаря чему остаюсь в форме. Помимо работы, в воскресенье я поехал на др к другу из Бауманки - Вове. Изначально мы поехали к нему в дом, чтобы отметить с родителями и всем собраться. Но после 20 мы плавно переместились в квартиру к Мише. Вот там было интересно. Больше половины перепили так, что даже не помнили этого. Плюс чуть не произошла драка между мной и Олегом, против Бауманских (такие твари). В итоге, в 5 утра все разъехались, а на квартире остались только я, Зак, Миша и Даша. Мне с утра надо было уезжать в Москву, поэтому я не видел смысла спать. подождал 7 утра и пошел на автобус, но не спать, была плохой идеей. Я еле-еле доехал до общаг и сразу уснул. А в 17:00 мне надо было на работу, благо там я взбодрился. Ну и самый сильный минус этой недели - погода. Вроде бы, май, но очень холодно. Даже сейчас, я записываю скринкаст, сидя в термухе и теплых носках, потому что и в общежитии и в квартире очень холодно. ","date":1678819266,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678819266,"objectID":"74fa8d950c167826111a353a57712a68","permalink":"https://example.com/post/4week/","publishdate":"2023-03-14T21:41:06+03:00","relpermalink":"/post/4week/","section":"post","summary":"Работа и холод","tags":["отдых"],"title":"Четвертая неделя","type":"post"},{"authors":["Лушин Артём"],"categories":null,"content":"Как проходила защита: Изначально мы выбирали стиль защиты, некоторые просто вели монолог, некоторые рассказывали по статьям, я же решил играть с аудиторией. Я выбрал себе тему про деньги, потому что мог привести большое количество аргументов. Задача выступающего была концентрация внимания на себе и своем ответе. Для этого я использовал прием вопросов, то есть задавал несколько вопросов, чтобы аудитория немного подумала и втянулась в тему. По ходу выступления я приводил большое количество аргументов и примеров. Но мы были сильно укорочены во времени, поэтому я старался быстро говорить аргументы, хотя от этого и терялся их вес. По итогу ответа я получил один из высочайших баллов.\n","date":1669386659,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1669386659,"objectID":"4160b99228bbb026f2de22495231f140","permalink":"https://example.com/talk/%D1%80%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%BA%D0%B0/","publishdate":"2023-05-09T16:45:59+03:00","relpermalink":"/talk/%D1%80%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%BA%D0%B0/","section":"event","summary":"Защита проекта по риторике","tags":["Учеба"],"title":"Риторика","type":"event"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]